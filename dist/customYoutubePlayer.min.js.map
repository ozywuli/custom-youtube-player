{"version":3,"sources":["customYoutubePlayer.min.js"],"names":["f","exports","module","define","document","window","length","e","o"],"mappings":"UAAUA,GAAG,GAAoBC,iBAAVA,SAAoC,oBAAAC,OAAaA,OAAOD,QAAQD,SAAmBG,GAASA,mBAATA,QAAqBA,OAAYA,IAAAA,UAAUH,OAc5GC,EAAxBG,oBAd4JC,OAc5JD,OAAwBH,oBAAxBG,OAAwBH,OAAAA,oBAAAA,KARXK,KAQbF,MAAAA,oBARaE,MAAAA,WAQbF,OAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,SAAwBH,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAXxCM,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAWwCN,mBAAAA,SAAAA,QAAAA,IARXK,GAAAA,EAAAA,OAAAA,EAKtBE,GAAAA,GARPD,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAWwCN,IAAAA,EAAxBG,IAAAA,MAAAA,uBARaE,EAAAA,KAAAA,MAKtBE,EAAAA,KAGiCP,mBAAAA,EAAAA,IAAxBG,EAAAA,EAAAA,IAAAA,YAAwBH,EAAAA,GAAAA,GAAAA,KAAAA,EAAAA,QAAAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,OAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,QAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAxBG,EAAwBH,GAAAA,SAAAA,EAAAA,EAAAA,mpDAAxBG","file":"customYoutubePlayer.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CustomYoutubePlayer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n;(function () {\n\n    // IIFE\n    var CustomYoutubePlayer = function () {\n\n        /*------------------------------------*\\\n          CUSTOM YOUTUBE IFRAME API\n        \\*------------------------------------*/\n        function CustomYouTubePlayer(userOptions) {\n\n            // ADD YOUTUBE IFRAME API SCRIPT\n            if (!document.getElementById('youtube-iframe')) {\n                var tag = document.createElement('script');\n                tag.id = 'youtube-iframe';\n                tag.src = 'https://www.youtube.com/iframe_api';\n                var firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            }\n\n            var videoId = void 0;\n            var $youtubeIframeWrapper = $('.youtube-player-wrapper');\n            var $youtubeIframe = $('#youtube-player-iframe');\n            var $adaptiveEl = void 0;\n\n            // SELF\n            var self = this;\n\n            // YOUTUBE IFRAME API PLAYER\n            this.Player = undefined;\n\n            /*------------------------------------*\\\n              CUSTOM METHODS\n            \\*------------------------------------*/\n            self.customMethods = {\n                onPlayerReady: function onPlayerReady() {\n                    // TURN ON ADAPTIVE VIDEO IF USER HAS SELECTED IT\n                    if (combinedExtendOptions.adaptiveVid) {\n                        self.customMethods.turnOnAdaptiveVid();\n                        combinedExtendOptions.onVidReady();\n                    }\n                },\n\n                onPlayerStateChange: function onPlayerStateChange() {\n                    var playerState = self.Player.getPlayerState();\n\n                    // WHEN THE VIDEO HAS ENDED\n                    if (playerState === 0) {\n                        combinedExtendOptions.onVidEnd();\n                    }\n                },\n\n                // OPTION TO TURN OFF ADAPTIVE VIDEO DYNAMICALLY\n                turnOffAdaptiveVid: function turnOffAdaptiveVid() {\n                    $adaptiveEl.off('resize.ytModal');\n                },\n\n                // ADPATIVE VIDEO STUFF\n                turnOnAdaptiveVid: function turnOnAdaptiveVid() {\n                    $youtubeIframe = $('#youtube-player-iframe');\n                    $adaptiveEl = $(combinedExtendOptions.adaptiveVidParent);\n\n                    // LOOP THROUGH IFRAME IFRAME AND SET THE ASPECT RATIO BASED ON THE IFRAME'S DEFAULT WIDTH AND HEIGHT\n                    $youtubeIframe.each(function () {\n                        $(this).attr('data-aspectratio', this.height / this.width).attr('data-aspectratio-h', this.width / this.height).removeAttr('height width');\n                    });\n\n                    // RESIZE IFRAME FUNCTION\n                    function resizeIframe() {\n\n                        // NEW WIDTH BASED ON IFRAME'S ORIGINAL WIDTH AND THE DESIRED DIMENSIONS\n                        var newWidth = $adaptiveEl.width() * combinedExtendOptions.adaptiveVidDimensions;\n                        // NEW HEIGHT BASED ON IFRAME'S ORIGINAL HEIGHT AND THE DESIRED DIMENSIONS\n                        var newHeight = $adaptiveEl.height() * combinedExtendOptions.adaptiveVidDimensions;\n\n                        // RESIZE BASE ON WIDTH\n                        if ($adaptiveEl.height() / $adaptiveEl.width() > $youtubeIframe.attr('data-aspectratio')) {\n                            $youtubeIframe.each(function () {\n                                var $thisEl = $(this);\n                                $thisEl.width(newWidth).height(newWidth * $thisEl.attr('data-aspectratio'));\n                            });\n\n                            // RESIZE BASE ON HEIGHT\n                        } else {\n                            $youtubeIframe.each(function () {\n                                var $thisEl = $(this);\n                                $thisEl.width(newHeight * $thisEl.attr('data-aspectratio-h')).height(newHeight);\n                            });\n                        }\n                    }\n\n                    // CALL `resizeIframe` TO GET THE BALL ROLLING\n                    resizeIframe();\n\n                    // ONCE IFRAME HAS BEEN RESIZED, REVEAL THE IFRAME\n                    $youtubeIframe.css('opacity', 1);\n\n                    // RESIZE IFRAME SHOULD WORK WHEN THE WINDOW RESIZES\n                    $adaptiveEl.on('resize.ytModal', function () {\n                        resizeIframe();\n                    });\n                }\n\n                /*------------------------------------*\\\n                  NATIVE YOUTUBE IFRAME API\n                \\*------------------------------------*/\n            };var defaultNativeOptions = {\n                events: {\n                    'onReady': self.customMethods.onPlayerReady,\n                    'onStateChange': self.customMethods.onPlayerStateChange\n                }\n            };\n\n            var combinedNativeOptions = $.extend(defaultNativeOptions, userOptions.native);\n\n            window.onYouTubeIframeAPIReady = function () {\n                self.Player = new YT.Player('youtube-player-iframe', combinedNativeOptions);\n            };\n\n            /*------------------------------------*\\\n              EXTENDED YOUTUBE IFRAME API\n            \\*------------------------------------*/\n            var defaultExtendOptions = {\n                adaptiveVid: true,\n                adaptiveVidParent: window,\n                adaptiveVidDimensions: 0.9,\n                onVidEnd: null\n            };\n\n            var combinedExtendOptions = $.extend(defaultExtendOptions, userOptions.extend);\n\n            // HIDE THE YOUTUBE IFRAME IF ADAPTIVE VIDEO IS TURNED ON SO THAT USERS DON'T SEE THE IFRAME BEING RESIZED\n            if (combinedExtendOptions.adaptiveVid) {\n                $youtubeIframe.css('opacity', 0);\n            }\n        } // END `CustomYouTubePlayer()`\n\n        // RETURN\n        return CustomYouTubePlayer;\n    }(); // END `CustomYouTubePlayer` IIFE\n\n\n    /*------------------------------------*\\\n      EXPORT OPTIONS\n    \\*------------------------------------*/\n    module.exports = CustomYoutubePlayer;\n}).call(undefined);\n\n},{}]},{},[1])(1)\n});"]}